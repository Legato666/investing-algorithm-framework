name: test

on:
  push:
    branches:
      - '*'         # matches every branch that doesn't contain a '/'
      - '*/*'       # matches every branch containing a single '/'
      - '**'        # matches every branch
    pull_request:
      branches:
        - '*'         # matches every branch that doesn't contain a '/'
        - '*/*'       # matches every branch containing a single '/'
        - '**'        # matches every branch

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip
          restore-keys: ${{ runner.os }}-pip
      - run: python -m pip install black flake8 isort
      - run: flake8 ./investing_algorithm_framework

  test:
    needs: linting
    strategy:
      fail-fast: true
      matrix:
        os: [ "ubuntu-latest", "macos-latest" ]
        python-version: [ "3.8", "3.9", "3.10", "3.11" ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install distutils on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo add-apt-repository ppa:deadsnakes/ppa
          sudo apt-get update
          sudo apt install python${{ matrix.python-version }}-distutils
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install all dependencies, including indicators
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          poetry install --no-interaction --all-extras
      - name: Confirm indicators dependencies installed
        run: |
          source .venv/bin/activate
          poetry show | grep -E 'numpy|scipy|tulipy'
      - name: Run tests
        run: |
          poetry run coverage run -m unittest discover -s tests
